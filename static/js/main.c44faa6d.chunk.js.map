{"version":3,"sources":["Assets/Mandelbrot.png","Components/ErrorPageComponent.js","Components/ErrorPageContainer.js","Components/Layout.js","Components/NavigationBar.js","Components/Jumbotron.js","Components/ThumbnailComponent.js","Components/ThumbnailContainer.js","Components/Projects/ProjectPageComponent.js","Components/Projects/ProjectPageContainer.js","Components/AlbumComponent.js","Components/AlbumContainer.js","Components/Renders/RenderPageComponent.js","Components/Renders/RenderPageContainer.js","Components/Projects/IndividualProjectComponent.js","Components/Projects/IndividualProjectContainer.js","Components/About/AboutComponent.js","Components/About/AboutContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ErrorPageComponent","React","Component","ErrorPageContainer","Layout","Container","this","props","children","Styles","styled","div","NavigationBar","Navbar","expand","Toggle","aria-controls","Collapse","id","Nav","className","Item","Link","href","backgroundImage","Jumbotron","fluid","message","ThumbnailComponent","alt","src","image","data-holder-rendered","title","isGallery","to","match","path","String","index","onClick","updateData","type","language","ThumbnailContainer","ProjectPageComponent","style","width","data","projects","map","value","thumbnail","date","ProjectPageContainer","updateMessage","AlbumComponent","software","RenderPageComponent","RenderPageContainer","state","currentData","bind","newValue","console","log","tempData","JSON","parse","stringify","renders","undefined","Object","keys","setState","forceUpdate","params","IndividualProjectComponent","class","video","target","thumbnailType","frameBorder","allowFullScreen","about","libraries","github","height","IndividualProjectContainer","AboutComponent","bio","transferableSkills","qualifications","ALevel","paddingLeft","paddingTop","technicalSkills","Languages","Libraries","Tools","AboutContainer","PersonalData","App","text","Fragment","exact","render","component","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"g8NAAAA,EAAOC,QAAU,IAA0B,wC,88FCU5BC,E,uKANP,OACI,6C,GAHqBC,IAAMC,WCSxBC,E,uKANP,OACI,kBAAC,EAAD,U,GAHqBF,IAAMC,W,QCUxBE,E,uKARP,OACI,kBAACC,EAAA,EAAD,KACKC,KAAKC,MAAMC,c,GAJPP,IAAMC,W,6RCA3B,IAAMO,EAASC,IAAOC,IAAV,KAsCGC,E,uKAzBP,OACI,kBAACH,EAAD,KACI,kBAACI,EAAA,EAAD,CAAQC,OAAO,MAGX,kBAACD,EAAA,EAAOE,OAAR,CAAeC,gBAAc,qBAC7B,kBAACH,EAAA,EAAOI,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACD,EAAA,EAAIE,KAAL,KACI,kBAACF,EAAA,EAAIG,KAAL,CAAUC,KAAK,uBAAf,UAEJ,kBAACJ,EAAA,EAAIE,KAAL,KACI,kBAACF,EAAA,EAAIG,KAAL,CAAUC,KAAK,0BAAf,aAEJ,kBAACJ,EAAA,EAAIE,KAAL,KACI,kBAACF,EAAA,EAAIG,KAAL,CAAUC,KAAK,yBAAf,oB,GAjBJtB,IAAMC,W,8kBCTlC,IAAMO,EAASC,IAAOC,IAAV,IAEca,KAyCXC,E,kDAhBX,WAAYlB,GAAO,uCACTA,G,qDAGN,OACI,kBAAC,EAAD,KACI,kBAAC,IAAD,CAAOmB,OAAK,EAACN,UAAU,SACnB,yBAAKA,UAAU,YACf,kBAACf,EAAA,EAAD,KACI,wBAAIe,UAAU,cAAcd,KAAKC,MAAMoB,gB,GAVvC1B,IAAMC,W,+fCtB9B,IAAMO,EAASC,IAAOC,IAAV,KA0DGiB,E,kDAlCX,WAAYrB,GAAO,uCACTA,G,qDAED,IAAD,OACJ,OACI,kBAAC,EAAD,KACI,yBAAKa,UAAU,YACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,eAAcS,IAAI,GAAGC,IAAuB,IAAlBxB,KAAKC,MAAMwB,MAAUzB,KAAKC,MAAMwB,MAAM,wGAAyGC,uBAAqB,SAC7M,yBAAKZ,UAAU,aACX,wBAAIA,UAAU,aAAad,KAAKC,MAAM0B,OACtC,yBAAKb,UAAU,qDAEiB,GAAxBd,KAAKC,MAAM2B,WACX,yBAAKd,UAAU,aACX,kBAAC,IAAD,CAAMe,GAAI7B,KAAKC,MAAM6B,MAAMC,KAAKC,OAAOhC,KAAKC,MAAMgC,OAAO,IAAKC,QAAS,kBAAM,EAAKjC,MAAMkC,WAAWH,OAAO,EAAK/B,MAAMgC,UAAS,4BAAQG,KAAK,SAAStB,UAAU,oCAAhC,UAI1G,GAAxBd,KAAKC,MAAM2B,WACX,yBAAKd,UAAU,aACX,kBAAC,IAAD,CAAMe,GAAI7B,KAAKC,MAAM6B,MAAMC,KAAKC,OAAOhC,KAAKC,MAAMgC,OAAO,KAAK,4BAAQG,KAAK,SAAStB,UAAU,oCAAhC,UAGtE,2BAAOA,UAAU,cAAcd,KAAKC,MAAMoC,mB,GAzBzC1C,IAAMC,WCnBxB0C,E,kDATX,WAAYrC,GAAO,uCACTA,G,qDAGN,OACI,kBAAC,EAAuBD,KAAKC,W,GANRN,IAAMC,W,gdCCxBQ,IAAOC,IAAV,KAAZ,IA4CekC,E,kDApBX,WAAYtC,GAAO,uCACTA,G,qDAED,IAAD,OACJ,OACQ,yBAAKa,UAAU,sBAAsB0B,MAAO,CAACC,MAAO,SAC5C,yBAAK3B,UAAU,OAEPd,KAAKC,MAAMyC,KAAKC,SAASC,KAAI,SAACC,EAAOZ,GACjC,OACI,kBAAC,EAAD,eAAoBR,MAAOoB,EAAMC,UAAWnB,MAAOkB,EAAMlB,MAAOoB,KAAMF,EAAME,KAAMV,SAAUQ,EAAMR,SAAUT,UAAW,EAAGK,MAASA,GAAW,EAAKhC,iB,GAXxJN,IAAMC,W,QCV1BoD,E,kDAbX,WAAY/C,GAAO,uCACTA,G,gEAGND,KAAKC,MAAMgD,cAAc,c,+BAGzB,OACI,kBAAC,EAAD,eAAsBP,KAAMA,GAAU1C,KAAKC,Y,GATpBN,IAAMC,W,gfCC1BQ,IAAOC,IAAV,KAAZ,IA6Ce6C,E,kDApBX,WAAYjD,GAAO,uCACTA,G,qDAED,IAAD,OACJ,OACQ,yBAAKa,UAAU,sBAAsB0B,MAAO,CAACC,MAAO,SAC5C,yBAAK3B,UAAU,OAEPd,KAAKC,MAAMyC,KAAKE,KAAI,SAACC,EAAOZ,GACxB,OAEI,kBAAC,EAAD,eAAoBR,MAAOoB,EAAMC,UAAWnB,MAAOkB,EAAMlB,MAAOoB,KAAMF,EAAME,KAAMV,SAAUQ,EAAMM,SAAUlB,MAAOA,GAAW,EAAKhC,iB,GAZ9IN,IAAMC,WCbpBsD,GAVcvD,IAAMC,UAUpBsD,GCAAE,E,kDAVX,WAAYnD,GAAO,uCACTA,G,qDAGN,OACI,kBAAC,EAAmBD,KAAKC,W,GANHN,IAAMC,WC6CzByD,E,kDA7CX,WAAYpD,GAAO,IAAD,8BACd,cAAMA,IAEDqD,MAAQ,CACT1B,WAAW,GAEf,EAAK2B,YAAc,GAEnB,EAAKpB,WAAa,EAAKA,WAAWqB,KAAhB,gBARJ,E,uDAWPC,GACPC,QAAQC,IAAIF,GACZ,IAAIG,EAAWC,KAAKC,MAAMD,KAAKE,UAAUrB,EAAKsB,UAC1CrC,EAAQ,QACIsC,IAAbR,GACCzD,KAAKuD,YAAcK,EAAShB,KAAI,SAACC,EAAOZ,GACpC,IAAIwB,EAAWZ,EAAMqB,OAAOC,KAAKtB,IAAQ,GAEzC,OADAY,EAAS9B,MAAQuC,OAAOC,KAAKtB,GAAO,GAC7BY,KAEXzD,KAAKoE,SAAS,CACVxC,UAAW,IAEfD,EAAQ,YAER3B,KAAKuD,YAAcK,EAASH,GAAUS,OAAOC,KAAKP,EAASH,IAAW,IACtEzD,KAAKoE,SAAS,CACVxC,UAAW,IAEfD,EAASuC,OAAOC,KAAKP,EAASH,IAAW,IAE7CzD,KAAKC,MAAMgD,cAActB,GACzB3B,KAAKqE,gB,0CAGLrE,KAAKmC,WAAWnC,KAAKC,MAAM6B,MAAMwC,OAAO1D,M,+BAGxC,OACI,kBAAC,EAAD,eAAqB8B,KAAM1C,KAAKuD,YAAapB,WAAcnC,KAAKmC,YAAgBnC,KAAKC,MAArF,CAA4F2B,UAAa5B,KAAKsD,MAAM1B,iB,GAzC9FjC,IAAMC,W,2KCkCxC,IAAMO,EAASC,IAAOC,IAAV,KAmFGkE,E,kDA1EX,WAAYtE,GAAO,uCACTA,G,qDAGN,OACA,kBAAC,EAAD,KACI,6BACI,yBAAKuE,MAAM,aAEa,IAApBxE,KAAKC,MAAMwE,OACX,6BACI,yBAAKD,MAAM,OACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,WACP,yBAAK1D,UAAU,cACX,wBAAI0D,MAAM,cAAV,UAEJ,yBAAKA,MAAM,aACP,4BAAQ1D,UAAY,cAAcU,IAAKxB,KAAKC,MAAMwE,MAAOC,OAAQ1E,KAAKC,MAAM0E,cAAeC,YAAa,EAAGC,iBAAiB,SAQhJ,yBAAKL,MAAM,QACP,yBAAKA,MAAM,aACP,wBAAIA,MAAM,cAAcxE,KAAKC,MAAM0B,OACnC,uBAAG6C,MAAM,aAAaxE,KAAKC,MAAM6E,SAGzC,yBAAKhE,UAAU,sBACX,yBAAK0D,MAAM,QACP,yBAAKA,MAAM,aACP,wBAAIA,MAAM,cAAV,qBACA,uBAAGA,MAAM,aAAT,aAAgCxE,KAAKC,MAAMoC,UAC3C,uBAAGmC,MAAM,aAAT,cAEIxE,KAAKC,MAAM8E,UAAUnC,KAAI,SAACC,EAAOZ,GAC7B,OACI,wBAAIuC,MAAM,aAAV,IAAwB3B,QAOnB,IAArB7C,KAAKC,MAAM+E,QACX,yBAAKR,MAAM,QACP,yBAAKA,MAAM,aACP,yBAAK1D,UAAU,gBAAeS,IAAI,GAAGC,IAAK,4EAA6EE,uBAAqB,OAAOe,MAAS,QAASwC,OAAQ,UAC7K,yBAAKnE,UAAU,aACX,wBAAIA,UAAU,aAAd,UACA,yBAAKA,UAAU,qDACX,yBAAKA,UAAU,aACX,uBAAGG,KAAMjB,KAAKC,MAAM+E,OAAQN,OAAO,UAAS,4BAAQtC,KAAK,SAAStB,UAAU,oCAAhC,sB,GAzDnDnB,IAAMC,WC7BhCsF,E,kDAZX,WAAYjF,GAAO,uCACTA,G,qDAGN,OACI,6BACI,kBAAC,EAAD,iBAAgCD,KAAKC,MAAWyC,EAAKC,SAAS3C,KAAKC,MAAM6B,MAAMwC,OAAO1D,W,GAP7DjB,IAAMC,W,6LCD/C,IAAMO,EAASC,IAAOC,IAAV,KA8FG8E,E,kDApFX,WAAYlF,GAAO,uCACTA,G,qDAED,IAAD,OACJ,OACI,kBAAC,EAAD,KACI,6BACI,yBAAKuE,MAAM,aAEP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,aACP,wBAAIA,MAAM,cAAV,yBACA,uBAAGA,MAAM,aAAaxE,KAAKC,MAAMyC,KAAK0C,KACtC,wBAAIZ,MAAM,cAAV,uBAEQxE,KAAKC,MAAMyC,KAAK2C,mBAAmBzC,KAAI,SAACC,EAAOZ,GAC3C,OACI,6BACI,wBAAIuC,MAAM,cAAc3B,EAAM,IAC9B,wBAAI2B,MAAM,aAAY,2BAAO1D,UAAU,cAAc+B,EAAM,KAAgB,mCAOvG,yBAAK/B,UAAU,2BACX,yBAAK0D,MAAM,QACP,yBAAKA,MAAM,aACP,wBAAIA,MAAM,cAAV,kBACA,uBAAGA,MAAM,aAAT,8CACA,uBAAGA,MAAM,aAAT,aAEIxE,KAAKC,MAAMyC,KAAK4C,eAAe,GAAGC,OAAO3C,KAAI,SAACC,EAAOZ,GACjD,OACA,wBAAIuC,MAAM,aAAY,2BAAO1D,UAAU,cAAc,EAAKb,MAAMoC,SAA1C,IAAqDQ,EAAM,GAA3D,KAAiEA,EAAM,UAM7G,yBAAK2B,MAAM,QACP,wBAAIA,MAAM,aAAahC,MAAO,CAACgD,YAAY,MAAOC,WAAW,QAA7D,oBACA,yBAAK3E,UAAU,UACX,yBAAK0D,MAAM,aACP,wBAAIA,MAAM,cAAV,aAEIxE,KAAKC,MAAMyC,KAAKgD,gBAAgB,GAAGC,UAAU/C,KAAI,SAACC,EAAOZ,GACrD,OACA,wBAAIuC,MAAM,aAAY,2BAAO1D,UAAU,cAAjB,IAAgC+B,QAKlE,yBAAK2B,MAAM,aACP,wBAAIA,MAAM,cAAV,aAEIxE,KAAKC,MAAMyC,KAAKgD,gBAAgB,GAAGE,UAAUhD,KAAI,SAACC,EAAOZ,GACrD,OACA,wBAAIuC,MAAM,aAAY,2BAAO1D,UAAU,cAAjB,IAAgC+B,QAKlE,yBAAK2B,MAAM,aACP,wBAAIA,MAAM,cAAV,SAEIxE,KAAKC,MAAMyC,KAAKgD,gBAAgB,GAAGG,MAAMjD,KAAI,SAACC,EAAOZ,GACjD,OACA,wBAAIuC,MAAM,aAAY,2BAAO1D,UAAU,cAAjB,IAAgC+B,kB,GAtEzElD,IAAMC,W,QCMpBkG,E,kDAbX,WAAY7F,GAAO,uCACTA,G,iEAGND,KAAKC,MAAMgD,cAAc,W,+BAGzB,OACI,kBAAC,EAAD,iBAAoBjD,KAAKC,MAAzB,CAAgCyC,KAAMqD,S,GATrBpG,IAAMC,WCiDpBoG,E,kDArCb,WAAY/F,GAAO,IAAD,8BAChB,cAAMA,IACDqD,MAAQ,CACXjC,QAAS,IAEX,EAAK4B,cAAgB,EAAKA,cAAcO,KAAnB,gBALL,E,0DAQJyC,GACZjG,KAAKoE,SAAS,CACV/C,QAAS4E,M,+BAIN,IAAD,OACN,OACI,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAW7E,QAAWrB,KAAKsD,MAAMjC,UACjC,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8E,OAAK,EAACpE,KAAO,IAAIqE,OAAQ,SAACnG,GAAD,OAAW,kBAAC,EAAD,eAAgBgD,cAAe,EAAKA,eAAmBhD,OAClG,kBAAC,IAAD,CAAOkG,OAAK,EAACpE,KAAO,UAAUqE,OAAQ,SAACnG,GAAD,OAAW,kBAAC,EAAD,eAAgBgD,cAAe,EAAKA,eAAmBhD,OACxG,kBAAC,IAAD,CAAOkG,OAAK,EAACpE,KAAO,aAAaqE,OAAQ,SAACnG,GAAD,OAAW,kBAAC,EAAD,eAAsBgD,cAAe,EAAKA,eAAmBhD,OACjH,kBAAC,IAAD,CAAOkG,OAAK,EAACpE,KAAO,gBAAgBqE,OAAQ,SAACnG,GAAD,OAAW,kBAAC,EAAD,eAA4BgD,cAAe,EAAKA,eAAmBhD,OAC1H,kBAAC,IAAD,CAAOkG,OAAK,EAACpE,KAAO,YAAYqE,OAAQ,SAACnG,GAAD,OAAW,kBAAC,EAAD,eAAqBgD,cAAe,EAAKA,eAAmBhD,OAC/G,kBAAC,IAAD,CAAOkG,OAAK,EAACpE,KAAO,gBAAgBqE,OAAQ,SAACnG,GAAD,OAAW,kBAAC,EAAD,eAAqBgD,cAAe,EAAKA,eAAmBhD,OACnH,kBAAC,IAAD,CAAOoG,UAAWxG,Y,GA7BhBF,IAAMC,WCFJ0G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3E,MACvB,2DCZN4E,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3D,QAAQ2D,MAAMA,EAAMhG,c","file":"static/js/main.c44faa6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Mandelbrot.dfa66a10.png\";","import React from 'react'\r\n\r\nclass ErrorPageComponent extends React.Component{\r\n    render(){\r\n        return(\r\n            <h1>ERROR 404</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorPageComponent;","import React from 'react'\r\nimport ErrorPageComponent from './ErrorPageComponent';\r\n\r\nclass ErrorPageContainer extends React.Component{\r\n    render(){\r\n        return(\r\n            <ErrorPageComponent />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorPageContainer;","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nclass Layout extends React.Component{\r\n    render(){\r\n        return(\r\n            <Container>\r\n                {this.props.children}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport {Nav, Navbar} from 'react-bootstrap';\r\nimport styled from 'styled-components'\r\nconst Styles = styled.div`\r\n    .navbar{\r\n        background-color: #222;\r\n    }\r\n    .navbar-brand, .navbar-nav .nav-link{\r\n        color: #bbb;\r\n        &:hover{\r\n            color: white;\r\n        }\r\n    }\r\n`;\r\nclass NavigationBar extends React.Component{\r\n    render(){\r\n        return (\r\n            <Styles>\r\n                <Navbar expand=\"lg\">\r\n                    {//<Navbar.Brand>NAV</Navbar.Brand>\r\n                    }\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                            <Nav.Item>\r\n                                <Nav.Link href=\"/portfolio/#/about/\">About</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link href=\"/portfolio/#/projects/\">Projects</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link href=\"/portfolio/#/renders/\">Renders</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </Styles>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavigationBar;","import React from 'react';\r\nimport {Jumbotron as Jumbo, Container} from 'react-bootstrap'\r\nimport styled from 'styled-components';\r\nimport backgroundImage from \"../Assets/Mandelbrot.png\"\r\n\r\nconst Styles = styled.div`\r\n    .jumbo{\r\n        background: url(${backgroundImage}) no-repeat fixed bottom;\r\n        background-size: cover;\r\n        color: #EFEFEF;\r\n        height: 225px;\r\n        position: relative;\r\n        z-index: 0;\r\n        text-align: center\r\n    }\r\n\r\n    .overlay{\r\n        background-color: #000;\r\n        opacity: 0.6;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        z-index: 1;\r\n    }\r\n    .jumboTitle{\r\n        display: inline-block\r\n    }\r\n`;\r\n\r\nclass Jumbotron extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <Styles>\r\n                <Jumbo fluid className=\"jumbo\">\r\n                    <div className=\"overlay\"></div>\r\n                    <Container>\r\n                        <h1 className=\"jumboTitle\">{this.props.message}</h1>\r\n                    </Container>\r\n                </Jumbo>\r\n            </Styles>\r\n        );\r\n    }\r\n}\r\nexport default Jumbotron","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nconst Styles = styled.div`\r\n    .card-img-top{\r\n        height: 235px;\r\n        margin: 0 auto;\r\n        width: 380px;\r\n        layout: center;\r\n        padding-top: 1vh;\r\n    }\r\n    .col-md-4{ \r\n        width: 60vw;\r\n        height: 28vh;  \r\n        max-width: 22vw !important;\r\n        margin-left: 4vw;\r\n        margin-top: 2vh; \r\n        margin-bottom: 10vh; \r\n        \r\n    }\r\n    .thumbnail{\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n`;\r\n\r\nclass ThumbnailComponent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(            \r\n            <Styles>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card mb-4 box-shadow\">\r\n                        <img className=\"card-img-top\"alt=\"\" src={this.props.image!=\"\"?this.props.image:\"https://image.shutterstock.com/image-vector/ui-image-placeholder-wireframes-apps-260nw-1037719204.jpg\"} data-holder-rendered=\"true\"/>\r\n                        <div className=\"card-body\">\r\n                            <h6 className=\"card-text\">{this.props.title}</h6>\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                {\r\n                                    this.props.isGallery == 0 &&\r\n                                    <div className=\"btn-group\">\r\n                                        <Link to={this.props.match.path+String(this.props.index)+\"/\"} onClick={() => this.props.updateData(String(this.props.index))}><button type=\"button\" className=\"btn btn-sm btn-outline-secondary\" >View</button></Link>\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    this.props.isGallery == 2 &&\r\n                                    <div className=\"btn-group\">\r\n                                        <Link to={this.props.match.path+String(this.props.index)+\"/\"}><button type=\"button\" className=\"btn btn-sm btn-outline-secondary\" >View</button></Link>\r\n                                    </div>\r\n                                }\r\n                                <small className=\"text-muted\">{this.props.language}</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>    \r\n            </Styles>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ThumbnailComponent;","import React from \"react\"\r\nimport ThumbnailComponent from \"./ThumbnailComponent\";\r\n\r\nclass ThumbnailContainer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <ThumbnailComponent {...this.props}/>\r\n        );\r\n    }\r\n}\r\nexport default ThumbnailContainer;","import React from \"react\"\r\nimport ThumbnailContainer from \"../ThumbnailContainer\"\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n    .projectPage{\r\n        float: left;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n    .container{\r\n        max-width:100% !important;\r\n        width:100% !important;\r\n    }\r\n    .album py-5 bg-light{\r\n        max-width: 100% !important;\r\n        background-color:red !important;\r\n    }\r\n    .row{\r\n        width: 1080px !important;\r\n        max-width: 100% !important;\r\n    }\r\n`;\r\n\r\n//<div className = \"album py-5 bg-light\">\r\n//<div className=\"projectPage\">\r\n\r\nclass ProjectPageComponent extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n                <div className=\"album py-5 bg-light\" style={{width: \"100%\"}}>\r\n                        <div className=\"row\">\r\n                            {\r\n                                this.props.data.projects.map((value, index) => {\r\n                                    return (                       \r\n                                        <ThumbnailContainer image={value.thumbnail} title={value.title} date={value.date} language={value.language} isGallery={2} index = {index} {...this.props}/>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>  \r\n                </div>     \r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectPageComponent;","import React from \"react\"\r\nimport ProjectPageComponent from \"./ProjectPageComponent\";\r\nimport data from \"../../Assets/Data/Projects.json\"\r\nclass ProjectPageContainer extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    componentDidMount(){\r\n        this.props.updateMessage(\"Projects\")\r\n    }\r\n    render(){\r\n        return(\r\n            <ProjectPageComponent data={data} {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectPageContainer;","import React from 'react'\r\nimport ThumbnailContainer from \"./ThumbnailContainer\"\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n    .projectPage{\r\n        float: left;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n    .container{\r\n        max-width:100% !important;\r\n        width:100% !important;\r\n    }\r\n    .album py-5 bg-light{\r\n        max-width: 100% !important;\r\n        background-color:red !important;\r\n    }\r\n    .row{\r\n        width: 100% !important;\r\n        max-width: 100% !important;\r\n        height: 100% !important;\r\n    }\r\n`;\r\n\r\n//<div className = \"album py-5 bg-light\">\r\n//<div className=\"projectPage\">\r\n\r\nclass AlbumComponent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n                <div className=\"album py-5 bg-light\" style={{width: \"100%\"}}>\r\n                        <div className=\"row\">\r\n                            {\r\n                                this.props.data.map((value, index) => {\r\n                                    return (                       \r\n                                        /*<ThumbnailContainer image={value[Object.keys(value)[0]][0].thumbnail} title={Object.keys(value)[0]} date={value[Object.keys(value)[0]][0].date} language={value[Object.keys(value)[0]][0].software}/>*/\r\n                                        <ThumbnailContainer image={value.thumbnail} title={value.title} date={value.date} language={value.software} index={index} {...this.props}/>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>  \r\n                </div>     \r\n        );\r\n    }\r\n}\r\nexport default AlbumComponent;","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport AlbumComponent from './AlbumComponent';\r\n\r\n\r\nclass AlbumContainer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <AlbumComponent {...this.props} /> \r\n        );\r\n    }\r\n}\r\nexport default AlbumComponent;","import React from \"react\"\r\nimport AlbumContainer from \"../AlbumContainer\"\r\n\r\n\r\nclass RenderPageComponent extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <AlbumContainer {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default RenderPageComponent;","import React from \"react\"\r\nimport RenderPageComponent from \"./RenderPageComponent\";\r\nimport data from \"../../Assets/Data/Projects.json\"\r\nclass RenderPageContainer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isGallery: true\r\n        }\r\n        this.currentData = [];\r\n\r\n        this.updateData = this.updateData.bind(this);\r\n    }\r\n    \r\n    updateData(newValue){\r\n        console.log(newValue);\r\n        let tempData = JSON.parse(JSON.stringify(data.renders));\r\n        let title = \"\";\r\n        if(newValue === undefined){\r\n            this.currentData = tempData.map((value, index) => {\r\n                let newValue = value[Object.keys(value)][0];\r\n                newValue.title = Object.keys(value)[0];\r\n                return newValue;\r\n            });\r\n            this.setState({\r\n                isGallery: 0\r\n            });\r\n            title = \"Renders\"\r\n        }else{\r\n            this.currentData = tempData[newValue][Object.keys(tempData[newValue])[0]];\r\n            this.setState({\r\n                isGallery: 1\r\n            });\r\n            title = [Object.keys(tempData[newValue])[0]][0]\r\n        }\r\n        this.props.updateMessage(title);\r\n        this.forceUpdate();\r\n    }\r\n    componentDidMount(){\r\n        this.updateData(this.props.match.params.id);\r\n    }\r\n    render(){\r\n        return(\r\n            <RenderPageComponent data={this.currentData} updateData = {this.updateData} {...this.props} isGallery = {this.state.isGallery}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RenderPageContainer;","import React from 'react'\r\nimport styled from \"styled-components\"\r\n\r\n/* const Styles = styled.div`\r\n    .video{\r\n        width: 100%;\r\n    }\r\n    .projectBio{       \r\n        display: flex;\r\n    }\r\n    .col-md-4{\r\n        display: flex;\r\n    }\r\n    .technicalDetails{\r\n\r\n    }\r\n    .video{\r\n        width: 100%;\r\n    }\r\n    .bs-docs-example{\r\n        display: flex;\r\n        flex: left;\r\n        justify: space-between;\r\n    }\r\n    .card-img-top{\r\n        width: 100px;\r\n        height: 100px;\r\n        display: flex;\r\n    }\r\n    .technicalAndGithub{\r\n        width: 100%; !important\r\n        display: flex;\r\n    }\r\n    .col-md-4{\r\n    }\r\n`;*/\r\n\r\nconst Styles = styled.div`\r\n    .card-deck{\r\n        display: flex;\r\n    }\r\n    .videoTitle{\r\n        paddingLeft: 2vw;\r\n    }\r\n`;\r\nclass IndividualProjectComponent extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return (\r\n        <Styles>\r\n            <div>\r\n                <div class=\"card-deck\">\r\n                    {\r\n                    this.props.video != \"\"&&\r\n                    <div>\r\n                        <div class=\"row\">\r\n                            <div class=\"card\">\r\n                                <div class=\"col-4-4\">\r\n                                    <div className=\"videoTitle\">\r\n                                        <h5 class=\"card-title\">Video</h5>\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <iframe className = \"staticVideo\" src={this.props.video} target={this.props.thumbnailType} frameBorder={0} allowFullScreen={true}></iframe>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                    \r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">{this.props.title}</h5>\r\n                            <p class=\"card-text\">{this.props.about}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"TechnicalAndGitHub\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Technical Details</h5>\r\n                                <p class=\"card-text\">Language: {this.props.language}</p>\r\n                                <p class=\"card-text\">Libraries:</p>\r\n                                {                                    \r\n                                    this.props.libraries.map((value, index) => {\r\n                                        return(\r\n                                            <ul class=\"card-text\"> {value}</ul> \r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.props.github != \"\" &&\r\n                            <div class=\"card\">\r\n                                <div class=\"card-body\">\r\n                                    <img className=\"card-img-left\"alt=\"\" src={\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\"} data-holder-rendered=\"true\" width = {\"100px\"} height={\"100px\"}/>\r\n                                    <div className=\"card-body\">\r\n                                        <h6 className=\"card-text\">GitHub</h6>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <div className=\"btn-group\">\r\n                                                <a href={this.props.github} target=\"_blank\"><button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">View</button></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> \r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Styles>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default IndividualProjectComponent;\r\n\r\n\r\n/*\r\nreturn (\r\n            <Styles>\r\n                <div className = \"individual-project-page\">\r\n                    <div className=\"card-group\">\r\n                        {\r\n                            this.props.video != \"\" &&\r\n                            <div className = \"video\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card box-shadow\">\r\n                                        <h3>Video</h3>\r\n                                        <iframe className = \"staticVideo\" src={this.props.video} target={this.props.thumbnailType} frameBorder={0} allowFullScreen={true}></iframe>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div className = \"projectBio\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card box-shadow\">\r\n                                    <h1>{this.props.title}</h1>\r\n                                    <p>{this.props.about}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"technicalAndGithub\">\r\n                            <div className = \"technicalDetails\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card box-shadow\">\r\n                                        <h1>Technical Details</h1>\r\n                                        <p>Language: {this.props.language}</p>\r\n                                        <p>Libraries:</p>\r\n                                        {                                    \r\n                                            this.props.libraries.map((value, index) => {\r\n                                                return(\r\n                                                    <ul> {value}</ul> \r\n                                                );\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                this.props.github != \"\" &&\r\n                                <div className=\"card\">\r\n                                    <div className=\"card box-shadow\">\r\n                                        <img className=\"card-img-top\"alt=\"\" src={\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\"} data-holder-rendered=\"true\"/>\r\n                                        <div className=\"card-body\">\r\n                                            <h6 className=\"card-text\">GitHub</h6>\r\n                                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                <div className=\"btn-group\">\r\n                                                    <a href={this.props.github}><button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">View</button></a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Styles>\r\n        );\r\n*/","import React from 'react'\r\nimport IndividualProjectComponent from './IndividualProjectComponent'\r\nimport data from \"../../Assets/Data/Projects.json\"\r\nclass IndividualProjectContainer extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <IndividualProjectComponent {...this.props} {...data.projects[this.props.match.params.id]}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IndividualProjectContainer;","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nconst Styles = styled.div`\r\n    .card-deck{\r\n        display: flex;\r\n        padding-top:2vh;\r\n    }\r\n    .skills{\r\n        display:flex;\r\n    }\r\n`;\r\nclass AboutComponent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return (\r\n            <Styles>\r\n                <div>\r\n                    <div class=\"card-deck\">\r\n                        \r\n                        <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Biography: Sam Hughes</h5>                                    \r\n                                <p class=\"card-text\">{this.props.data.bio}</p>\r\n                                <h5 class=\"card-title\">Transferable Skills</h5>  \r\n                                {                                    \r\n                                        this.props.data.transferableSkills.map((value, index) => {\r\n                                            return(\r\n                                                <div>\r\n                                                    <h6 class=\"card-title\">{value[0]}</h6> \r\n                                                    <ul class=\"card-text\"><small className=\"text-muted\">{value[1]}</small></ul><br/> \r\n                                                </div>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"QualificationsAndSkills\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-body\">\r\n                                    <h5 class=\"card-title\">Qualifications</h5>\r\n                                    <p class=\"card-text\">Degree: BSc in Computer Science, 1st Class</p>\r\n                                    <p class=\"card-text\">A-Levels:</p>\r\n                                    {                                    \r\n                                        this.props.data.qualifications[0].ALevel.map((value, index) => {\r\n                                            return(\r\n                                            <ul class=\"card-text\"><small className=\"text-muted\">{this.props.language} {value[0]}: {value[1]}</small></ul> \r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card\">\r\n                                <h5 class=\"card-title\" style={{paddingLeft:\"1vw\", paddingTop:\"2vh\"}}>Technical Skills</h5>\r\n                                <div className=\"skills\">\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">Languages</h5>\r\n                                        {                                    \r\n                                            this.props.data.technicalSkills[0].Languages.map((value, index) => {\r\n                                                return(\r\n                                                <ul class=\"card-text\"><small className=\"text-muted\"> {value}</small></ul> \r\n                                                );\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">Libraries</h5>\r\n                                        {                                    \r\n                                            this.props.data.technicalSkills[0].Libraries.map((value, index) => {\r\n                                                return(\r\n                                                <ul class=\"card-text\"><small className=\"text-muted\"> {value}</small></ul> \r\n                                                );\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">Tools</h5>\r\n                                        {                                    \r\n                                            this.props.data.technicalSkills[0].Tools.map((value, index) => {\r\n                                                return(\r\n                                                <ul class=\"card-text\"><small className=\"text-muted\"> {value}</small></ul> \r\n                                                );\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Styles>\r\n            );\r\n    }\r\n}\r\n\r\nexport default AboutComponent;","import React from \"react\"\r\nimport AboutComponent from \"./AboutComponent\"\r\nimport PersonalData from \"../../Assets/Data/AboutMe.json\"\r\nclass AboutContainer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    componentWillMount(){\r\n        this.props.updateMessage(\"About\")\r\n    }\r\n    render(){\r\n        return (\r\n            <AboutComponent {...this.props} data={PersonalData}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutContainer;","import React from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport ErrorPageContainer from \"./Components/ErrorPageContainer\"\nimport Layout from \"./Components/Layout\"\nimport NavigationBar from \"./Components/NavigationBar\"\nimport Jumbotron from \"./Components/Jumbotron\"\nimport './App.css';\nimport './Styling/Album.css'\nimport ProjectPageContainer from './Components/Projects/ProjectPageContainer';\nimport RenderPageContainer from './Components/Renders/RenderPageContainer';\nimport ProjectData from \"./Assets/Data/Projects.json\"\nimport IndividualProjectContainer from './Components/Projects/IndividualProjectContainer';\nimport AboutContainer from './Components/About/AboutContainer';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      message: \"\"\n    }\n    this.updateMessage = this.updateMessage.bind(this);\n  }\n  \n  updateMessage(text){\n    this.setState({\n        message: text\n    });\n  }\n  \n  render(){\n    return (\n        <React.Fragment>\n          <NavigationBar/>\n          <Jumbotron message = {this.state.message}/>\n          <Layout>\n            <HashRouter>\n              <Switch>\n                <Route exact path = \"/\" render={(props) => <AboutContainer updateMessage={this.updateMessage} {...props} /> } />\n                <Route exact path = \"/about/\" render={(props) => <AboutContainer updateMessage={this.updateMessage} {...props} /> } />\n                <Route exact path = \"/projects/\" render={(props) => <ProjectPageContainer updateMessage={this.updateMessage} {...props} /> } />\n                <Route exact path = \"/projects/:id\" render={(props) => <IndividualProjectContainer updateMessage={this.updateMessage} {...props} /> } />\n                <Route exact path = \"/renders/\" render={(props) => <RenderPageContainer updateMessage={this.updateMessage} {...props} /> }/>\n                <Route exact path = \"/renders/:id/\" render={(props) => <RenderPageContainer updateMessage={this.updateMessage} {...props} /> } />\n                <Route component={ErrorPageContainer} />\n              </Switch>\n            </HashRouter>\n          </Layout>\n        </React.Fragment>\n    );\n  }\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}